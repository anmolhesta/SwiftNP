{"includedArchiveIdentifiers":["SwiftNP"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/==(_:_:)","title":"static func == (NDArrayImpl, NDArrayImpl) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/init(shape:dtype:defaultvalue:)","title":"convenience init(shape: [Int], dtype: DType, defaultValue: NSNumber) throws(SNPError)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/contenttype","title":"let contentType: ContentType","type":"property"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/dtype","title":"let dtype: DType","type":"property"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/isscalar","title":"var isScalar: Bool","type":"property"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/ndim","title":"var ndim: Int","type":"property"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/shape","title":"let shape: Shape","type":"property"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/isequal(to:)","title":"func isEqual(to: any NDArray) -> Bool","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnp\/ndarrayimpl\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/add(_:)","title":"func add(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/divide(_:)","title":"func divide(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/divide(by:)","title":"func divide(by: Double) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/dot(_:)","title":"func dot(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/multiply(_:)","title":"func multiply(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/multiply(by:)","title":"func multiply(by: Double) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/reshape(to:)","title":"func reshape(to: Shape) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/reshape(to:order:)","title":"func reshape(to: Shape, order: ReshapeOrder) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/subtract(_:)","title":"func subtract(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/tomlmultiarray()","title":"func toMLMultiArray() throws(SNPError) -> MLMultiArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/transpose()","title":"func transpose() throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/transpose(axes:)","title":"func transpose(axes: [Int]?) throws(SNPError) -> any NDArray","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarrayimpl\/from(_:)","title":"static func from(MLMultiArray) throws(SNPError) -> any NDArray","type":"method"}],"path":"\/documentation\/swiftnp\/ndarrayimpl\/ndarray-implementations","title":"NDArray Implementations","type":"symbol"}],"path":"\/documentation\/swiftnp\/ndarrayimpl","title":"NDArrayImpl","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/swiftnp\/dot(_:_:)","title":"static func dot(any NDArray, any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/swiftnp\/ndarray(_:)","title":"static func ndarray([Any]) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/swiftnp\/ones(shape:)","title":"static func ones(shape: Shape) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/swiftnp\/zeros(shape:)","title":"static func zeros(shape: Shape) throws(SNPError) -> any NDArray","type":"method"}],"path":"\/documentation\/swiftnp\/swiftnp","title":"SwiftNP","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarray\/contenttype","title":"var contentType: ContentType","type":"property"},{"path":"\/documentation\/swiftnp\/ndarray\/dtype","title":"var dtype: DType","type":"property"},{"path":"\/documentation\/swiftnp\/ndarray\/isscalar","title":"var isScalar: Bool","type":"property"},{"path":"\/documentation\/swiftnp\/ndarray\/ndim","title":"var ndim: Int","type":"property"},{"path":"\/documentation\/swiftnp\/ndarray\/shape","title":"var shape: Shape","type":"property"},{"path":"\/documentation\/swiftnp\/ndarray\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarray\/add(_:)","title":"func add(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/divide(_:)","title":"func divide(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/divide(by:)","title":"func divide(by: Double) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/dot(_:)","title":"func dot(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/isequal(to:)","title":"func isEqual(to: any NDArray) -> Bool","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/multiply(_:)","title":"func multiply(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/multiply(by:)","title":"func multiply(by: Double) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/reshape(to:)","title":"func reshape(to: Shape) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/reshape(to:order:)","title":"func reshape(to: Shape, order: ReshapeOrder) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/subtract(_:)","title":"func subtract(any NDArray) throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/tomlmultiarray()","title":"func toMLMultiArray() throws(SNPError) -> MLMultiArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/tostring()","title":"func toString() -> String","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/transpose()","title":"func transpose() throws(SNPError) -> any NDArray","type":"method"},{"path":"\/documentation\/swiftnp\/ndarray\/transpose(axes:)","title":"func transpose(axes: [Int]?) throws(SNPError) -> any NDArray","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/ndarray\/from(_:)","title":"static func from(MLMultiArray) throws(SNPError) -> any NDArray","type":"method"}],"path":"\/documentation\/swiftnp\/ndarray","title":"NDArray","type":"protocol"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/*(_:_:)-1d3z0","title":"func * (Double, any NDArray) throws(SNPError) -> any NDArray","type":"op"},{"path":"\/documentation\/swiftnp\/*(_:_:)-7lsv7","title":"func * (any NDArray, Double) throws(SNPError) -> any NDArray","type":"op"},{"path":"\/documentation\/swiftnp\/*(_:_:)-893ct","title":"func * (any NDArray, any NDArray) throws(SNPError) -> any NDArray","type":"op"},{"path":"\/documentation\/swiftnp\/+(_:_:)","title":"func + (any NDArray, any NDArray) throws(SNPError) -> any NDArray","type":"op"},{"path":"\/documentation\/swiftnp\/-(_:_:)","title":"func - (any NDArray, any NDArray) throws(SNPError) -> any NDArray","type":"op"},{"path":"\/documentation\/swiftnp\/===(_:_:)","title":"func === (any NDArray, any NDArray) -> Bool","type":"op"},{"path":"\/documentation\/swiftnp\/_(_:_:)-6pzkf","title":"func \/ (any NDArray, Double) throws(SNPError) -> any NDArray","type":"op"},{"path":"\/documentation\/swiftnp\/_(_:_:)-9h262","title":"func \/ (any NDArray, any NDArray) throws(SNPError) -> any NDArray","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/snp","title":"SNP","type":"typealias"},{"path":"\/documentation\/swiftnp\/shape","title":"Shape","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/contenttype\/image","title":"case image","type":"case"},{"path":"\/documentation\/swiftnp\/contenttype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/contenttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/contenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnp\/contenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnp\/contenttype","title":"ContentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/dtype\/double","title":"case double","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/float16","title":"case float16","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/float32","title":"case float32","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/float64","title":"case float64","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/int","title":"case int","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/int16","title":"case int16","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/int32","title":"case int32","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/int64","title":"case int64","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/int8","title":"case int8","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/uint16","title":"case uint16","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/uint32","title":"case uint32","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/uint64","title":"case uint64","type":"case"},{"path":"\/documentation\/swiftnp\/dtype\/uint8","title":"case uint8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/dtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/dtype\/mlmultiarraydatatype","title":"var mlMultiArrayDataType: MLMultiArrayDataType?","type":"property"},{"path":"\/documentation\/swiftnp\/dtype\/type","title":"var type: any Numeric.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/dtype\/cast(_:)","title":"func cast(NSNumber) -> (any Numeric)?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/dtype\/typeof(_:)","title":"static func typeOf(any Numeric) -> DType?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/dtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnp\/dtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnp\/dtype","title":"DType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/reshapeorder\/c","title":"case c","type":"case"},{"path":"\/documentation\/swiftnp\/reshapeorder\/f","title":"case f","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/reshapeorder\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/reshapeorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftnp\/reshapeorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/reshapeorder\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/reshapeorder\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/reshapeorder\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/swiftnp\/reshapeorder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftnp\/reshapeorder\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftnp\/reshapeorder","title":"ReshapeOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/snperror\/assertionerror(_:)","title":"case assertionError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/floatingpointerror(_:)","title":"case floatingPointError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/indexerror(_:)","title":"case indexError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/memoryerror(_:)","title":"case memoryError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/othererror(_:)","title":"case otherError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/shapeerror(_:)","title":"case shapeError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/typeerror(_:)","title":"case typeError(String)","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/unimplementederror","title":"case unimplementedError","type":"case"},{"path":"\/documentation\/swiftnp\/snperror\/valueerror(_:)","title":"case valueError(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/snperror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/snperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftnp\/snperror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swiftnp\/snperror","title":"SNPError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/coreml\/mlmultiarray\/tondarray","title":"var toNDArray: any NDArray","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/coreml\/mlmultiarray\/from(ndarray:)","title":"static func from(ndarray: any NDArray) throws(SNPError) -> MLMultiArray","type":"method"}],"path":"\/documentation\/swiftnp\/coreml\/mlmultiarray","title":"MLMultiArray","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/coreml\/mlmultiarraydatatype\/dtype","title":"var dtype: DType","type":"property"}],"path":"\/documentation\/swiftnp\/coreml\/mlmultiarraydatatype","title":"MLMultiArrayDataType","type":"extension"}],"path":"\/documentation\/swiftnp\/coreml","title":"CoreML","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/swift\/numeric\/nsnumber","title":"var nsnumber: NSNumber","type":"property"}],"path":"\/documentation\/swiftnp\/swift\/numeric","title":"Numeric","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/swift\/array\/ishomogeneous","title":"var isHomogeneous: Bool","type":"property"},{"path":"\/documentation\/swiftnp\/swift\/array\/size","title":"var size: Int","type":"property"}],"path":"\/documentation\/swiftnp\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/swift\/int\/isfinite","title":"var isFinite: Bool","type":"property"}],"path":"\/documentation\/swiftnp\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftnp\/swift\/string\/custom(key:args:)","title":"static func custom(key: String.LocalizationValue, args: [any CVarArg]) -> String","type":"method"}],"path":"\/documentation\/swiftnp\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/swiftnp\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/swiftnp","title":"SwiftNP","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}